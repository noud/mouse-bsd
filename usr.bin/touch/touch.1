.\"	$NetBSD: touch.1,v 1.16 2003/08/07 11:16:44 agc Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)touch.1	8.3 (Berkeley) 4/28/95
.\"
.Dd April 28, 1995
.Dt TOUCH 1
.Os
.Sh NAME
.Nm touch
.Nd change file access and modification times
.Sh SYNOPSIS
.Nm
.Op Fl acfhim
.Op Fl r Ar file
.Op Fl t Ar [[CC]YY]MMDDhhmm[.SS]
.Op Fl d Ar inc
.Ar file ...
.Sh DESCRIPTION
The
.Nm
utility sets the modification and access times of files to the
current time of day.
If the file doesn't exist, it is created with default permissions.
.Pp
The following options are available:
.Bl -tag -width Ds
.It Fl a
Change the access time of the file.
The modification time of the file is not changed unless the
.Fl m
flag is also specified.
.It Fl c
Do not create the file if it does not exist.
The
.Nm
utility does not treat this as an error.
No error messages are displayed and the exit value is not affected.
.It Fl d Ar inc
Specify
.Ar inc ,
a time increment
.\" This should be just
.\"	.Pf ( Sq d Ns
.\"	elta) in seconds...
.\" but that doesn't work with 1.4T's -mandoc.  (It does work with 4.0.1's.)
.Sm off
.Xo
.Pf ( Sq d
.No elta)
.Xc
.Sm on
in seconds, which is added to the time used for each file to give
the time used for the next file; other options which control the
timestamp to be used specify the time for the first-affected file.
This has no effect unless multiple files are affected.
.Ar inc
must be an integer, and may be negative (producing progressively
earlier times).
.It Fl f
Attempt to force the update, even if the file permissions do not
currently permit it.
.It Fl h
If
.Ar file
is a symbolic link, access and/or modification time of the link is changed.
This option implies
.Fl c .
.It Fl i
Indirect: any
.Ar file
arguments are not files to be manipulated; rather, they name files
containing filenames, one per line, which are to be manipulated.  As a
special case, an argument of
.Sq \&\-
causes names to be read from the standard input.  (This special case
does not apply unless
.Fl i
is given.)
This is somewhat like using
.Xr xargs 1
with
.Nm touch ;
this option exists because (a) it is necessary to allow
.Fl d
to operate properly even on very long lists of files and (b)
.Xr xargs 1
considers space and tab, as well as newline, to delimit arguments.
.It Fl m
Change the modification time of the file.
The access time of the file is not changed unless the
.Fl a
flag is also specified.
.It Fl r
Use the access and modifications times from the specified file
instead of the current time of day.
.It Fl t
Change the access and modification times to the specified time.
The argument should be in the form
.Dq [[CC]YY]MMDDhhmm[.SS]
where each pair of letters represents the following:
.Pp
.Bl -tag -width Ds -compact -offset indent
.It Ar CC
The first two digits of the year (the century).
.It Ar YY
The second two digits of the year.
If
.Dq YY
is specified, but
.Dq CC
is not, a value for
.Dq YY
between 69 and 99 results in a
.Dq CC
value of 19.
Otherwise, a
.Dq CC
value of 20 is used.
.It Ar MM
The month of the year, from 1 to 12.
.It Ar DD
The day of the month, from 1 to 31.
.It Ar hh
The hour of the day, from 0 to 23.
.It Ar mm
The minute of the hour, from 0 to 59.
.It Ar SS
The second of the minute, from 0 to 61.
.El
.Pp
If the
.Dq CC
and
.Dq YY
letter pairs are not specified, the values default to the current
year.
If the
.Dq SS
letter pair is not specified, the value defaults to 0.
.El
.Pp
The
.Nm
utility exits 0 on success, and \*[Gt]0 if an error occurs.
.Sh SEE ALSO
.Xr utimes 2
.Sh COMPATIBILITY
The obsolescent form of
.Nm touch ,
where a time format is specified as the first argument, is supported.
When no
.Fl r
or
.Fl t
option is specified, there are at least two arguments, and the first
argument is a string of digits either eight or ten characters in length,
the first argument is interpreted as a time specification of the form
.Dq MMDDhhmm[YY] .
.Pp
The
.Dq MM ,
.Dq DD ,
.Dq hh
and
.Dq mm
letter pairs are treated as their counterparts specified to the
.Fl t
option.
If the
.Dq YY
letter pair is in the range 69 to 99, the year is set to 1969 to 1999,
otherwise, the year is set in the 21st century.
.Sh STANDARDS
The
.Nm
utility is expected to be a superset of the
.St -p1003.2
specification.  The
.Fl i
and
.Fl d
options are
.Nx
extensions.
.Sh HISTORY
A
.Nm
utility appeared in
.At v7 .
.Sh BUGS
A symbolic link can't be a reference file of access and/or modification
time.
.Pp
There is no way to get a newline into an indirect filename when using
.Fl i .
(Something analogous to
.Xr xargs 1 Ap s
.Fl 0
option would make sense here, but is of no real use in the anticipated
use case for
.Fl i ,
which involves using line-based text tools to process lists of
filenames.)
.Pp
Invalid arguments to
.Fl d
(eg, non-numbers) do not produce warning messages, instead silently
using whatever
.Xr atol 3
returns.
.Pp
NULs in
.Fl i
input will both terminate the pathname and cause the rest of the line
to be ignored.  The first part is not fixable unless and until we have
filesystem interfaces that do not depend on NUL-terminated strings; the
second part does not strike me as worth fixing.
.Pp
A partial line at the end of input (ie, if there is input but it does
not end with a newline) is ignored (with a warning message) when
reading filenames for
.Fl i .
Whether effectively supplying a newline is better is debatable.
